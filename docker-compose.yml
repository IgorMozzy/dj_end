services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - private

  web:
    build: .
    command: > # /wait-for-it.sh db:5432 -- 
      sh -c "python manage.py collectstatic --noinput
      && python manage.py migrate 
      && gunicorn conf.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
#    ports:
#      - "8000:8000"
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_SETTINGS_MODULE: conf.settings
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - private

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./certs:/etc/nginx/certs
    depends_on:
      - web
    networks:
      - skynet
      - private

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
    networks:
      - private

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - skynet
      - private

networks:
  skynet:
    # configuration for very specific environment
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
  private:

volumes:
  postgres_data:
  static_volume:
  media_volume:
  grafana_data: